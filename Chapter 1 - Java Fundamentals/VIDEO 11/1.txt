Sr. No.
1.
2.
3.
Methods
char charAt(int index)
int length()
static String format(String format, Object... args)
static String format (Locale 1, String format, Object... args)
Description
This method returns char at (value for) the particular index.
This method returns string length.
This method returns formatted string.
This method returns formatted string with given locale.
String substring(int beginIndex)
String substring(int beginIndex, int endIndex)
boolean contains (CharSequence s)
static String Join(CharSequence delimiter, CharSequence... elements)
static String join(CharSequence delimiter, Iterable<? extends CharSequence> elements)
10. boolean equals(Object another)
11. boolean isEmpty()
12. String concat(String str)
13. String replace(char old, char new)
14.
String replace(CharSequence old, CharSequence new)
15. String trim()
16. String split(String regex)
17. String split(String regex, int limit)
18. String intern()
19. int IndexOf(int ch)
20. int IndexOf(int ch, Ent fromIndex)
21
int IndexOf(String substring)
This method returns substring for given begin index.
This method returns substring for given begin index and end index.
This method returns true or false after matching the sequence of char value.
This method returns a joined string with delimiter.
This method returns a joined string.
This method checks the equality of string with object.
This method checks if string is empty.
This method concatenates specified string.
This method replaces all occurrences. of specified char value.
This method replaces all occurrences of specified CharSequence.
This method returns trimmed string omitted leading and trailing spaces.
This method returns splitted string matching regex.
This method returns splitted string matching regex and limit.
This method returns interned string.
This method returns specified char value index.
This method returns specified char value index starting with given index
This method returns specified substring index.
22. int indexOf(String substring, int fromIndex)
This method returns specified substring index starting with given. index.
This method returns string in lowercase.
23 String toLowerCase()
24. String toLowerCase(Locale 1)
25. String toUpperCase()
26. String toUpperCase(Locale 1)
This method returns string in uppercase.
This method returns string in lowercase using specified locale.
This method returns string in uppercase using specified locale.



String Class Constructors:
Constructors are used to initialize the object. The string class supports several constructors.
The following table shows the constructors of the string class.
Table 1.5: String Class Constructor
Sr. No.
1
2.
3.
4.
Constructor
Description
This constructor creates an empty string.
String()
String(String value)
This constructor creates a new string that is a copy of the given string
String(char[] value)
This constructor constructs a new string based on the character array,
String(char[] value, int begin, int count)
This constructs a new string based on the character array starting from the position begin which is 'count' characters long.
String(byte[] value)
This constructor creates a new string by converting the given array of bytes. This constructor creates a new string by converting the given sub of array of bytes.
String(byte[] value, int offset. int length)
String(StringBuffer buffer)
This constructor creates a new string based on a StringBuffer value.
String(char[] value, int begin, int count, String enc) throws UnsupportedEncoding Exception
This constructor creates a new string based on the given byte array and uses given character encoding that is denoted by enc.
9. String(char[] value, String enc) throws UnsupportedEncoding Exception
5
7.
This constructor creates a new string based on the given byte array and uses given character encoding that is denoted by enc.